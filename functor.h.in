// Start of copied block

%%TEMPLATE(prefixtemplate, hasreturnvalue, hastypename, hastype, hasdefaults)%%class %%CALLBACK_OR_CLOSURE%%%%TEMPLATE(blankonfirst, prefixbracket, hasreturnvalue, hastype, trailingvoids)%% : private boost::noncopyable {
public:
  virtual %%RETURNVALUE%% Run(%%TEMPLATE(hastype, hasparam)%%) const = 0;

  virtual ~%%CALLBACK_OR_CLOSURE%%() { };
};

%%TEMPLATE(prefixtemplate, hasowner, hasreturnvalue, hastypename, hastype, hasdefaults)%%class %%CALLBACK_OR_CLOSURE%%_Member_NC%%TEMPLATE(blankonfirst, prefixbracket, hasowner, hasreturnvalue, hastype, trailingvoids)%% : public %%CALLBACK_OR_CLOSURE%%%%TEMPLATE(prefixbracket, hasreturnvalue, hastype)%% {
private:
  Owner *owner;
  %%RETURNVALUE%% (Owner::*function)(%%TEMPLATE(hastype)%%);

public:
  virtual %%RETURNVALUE%% Run(%%TEMPLATE(hastype, hasparam)%%) const { return (owner->*function)(%%TEMPLATE(hasparam)%%); };
  
  %%CALLBACK_OR_CLOSURE%%_Member_NC(Owner *owner, %%RETURNVALUE%% (Owner::*function)(%%TEMPLATE(hastype)%%)) : owner(owner), function(function) { };
};

%%TEMPLATE(prefixtemplate, hasowner, hasreturnvalue, hastypename, hastype, hasdefaults)%%class %%CALLBACK_OR_CLOSURE%%_Member_C%%TEMPLATE(blankonfirst, prefixbracket, hasowner, hasreturnvalue, hastype, trailingvoids)%% : public %%CALLBACK_OR_CLOSURE%%%%TEMPLATE(prefixbracket, hasreturnvalue, hastype)%% {
private:
  const Owner *owner;
  %%RETURNVALUE%% (Owner::*function)(%%TEMPLATE(hastype)%%) const;

public:
  virtual %%RETURNVALUE%% Run(%%TEMPLATE(hastype, hasparam)%%) const { return (owner->*function)(%%TEMPLATE(hasparam)%%); };
  
  %%CALLBACK_OR_CLOSURE%%_Member_C(const Owner *owner, %%RETURNVALUE%% (Owner::*function)(%%TEMPLATE(hastype)%%) const) : owner(owner), function(function) { };
};

%%TEMPLATE(nullstatic, prefixtemplate, hasowner, hasreturnvalue, hastypename, hastype)%% smart_ptr<%%CALLBACK_OR_CLOSURE%%%%TEMPLATE(prefixbracket, hasreturnvalue, hastype)%%> NewFunctor(Owner *owner, %%RETURNVALUE%% (Owner::*function)(%%TEMPLATE(hastype)%%)) {
  return smart_ptr<%%CALLBACK_OR_CLOSURE%%%%TEMPLATE(prefixbracket, hasreturnvalue, hastype)%%>(new %%CALLBACK_OR_CLOSURE%%_Member_NC%%TEMPLATE(prefixbracket, hasowner, hasreturnvalue, hastype)%%(owner, function));
};

%%TEMPLATE(nullstatic, prefixtemplate, hasowner, hasreturnvalue, hastypename, hastype)%% smart_ptr<%%CALLBACK_OR_CLOSURE%%%%TEMPLATE(prefixbracket, hasreturnvalue, hastype)%%> NewFunctor(const Owner *owner, %%RETURNVALUE%% (Owner::*function)(%%TEMPLATE(hastype)%%) const) {
  return smart_ptr<%%CALLBACK_OR_CLOSURE%%%%TEMPLATE(prefixbracket, hasreturnvalue, hastype)%%>(new %%CALLBACK_OR_CLOSURE%%_Member_C%%TEMPLATE(prefixbracket, hasowner, hasreturnvalue, hastype)%%(owner, function));
};

// End of copied block
